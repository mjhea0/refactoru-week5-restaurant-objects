// Generated by CoffeeScript 1.6.3
// refactored by Michael Herman

// part 1

(function() {
  var Customer, Drink, FoodItem, Menu, Order, Plate, Restaurant, apple, cake, yogurt;

  // super class
  FoodItem = function(name, calories, vegan, glutenFree, citrusFree) {
    this.name = name;
    this.calories = calories;
    if (vegan === true) {
      this.vegan = "vegan";
    } else {
      this.vegan = "not vegan";
    }
    if (glutenFree === true) {
      this.glutenFree = "gluten-free";
    } else {
      this.glutenFree = "not gluten-free";
    }
    if (citrusFree === true) {
      this.citrusFree = "is not citrus";
    } else {
      this.citrusFree = "is citrus";
    }
    this.toString = function() {
      return this.name.charAt(0).toUpperCase() + this.name.slice(1) + " has " + this.calories + " calories. It is " + this.vegan + ", " + this.citrusFree + ", and " + this.glutenFree + ".";
    };
  };

  apple = new FoodItem("apple", 60, true, true, true);
  cake = new FoodItem("cake", 600, false, false, false);
  yogurt = new FoodItem("yogurt", 80, false, true, false);

  console.log(apple.toString());
  console.log(cake.toString());
  console.log(yogurt.toString());

 // part 2

  Drink = function(name, description, items) {
    this.name = name;
    this.description = description;
    return this.items = items;
  };

  Plate = function(name, description, price, items) {
    this.name = name;
    this.description = description;
    this.price = price;
    return this.items = items;
  };

  Order = function(plates) {
    return this.plates = plates;
  };

  Menu = function(plates) {
    return this.plates = plates;
  };

  Restaurant = function(name, description, menu) {
    this.name = name;
    this.description = description;
    return this.menu = menu;
  };

  Customer = function(dietaryPreference) {
    return this.dietaryPreference = dietaryPreference;
  };

  Order.prototype.toString = function() {
    var i, platesArr;
    platesArr = [];
    i = 0;
    while (i < this.plates.length) {
      platesArr.push(this.plates[i].name);
      i++;
    }
    return "This order contains " + this.plates.length + " plates: " + platesArr.join(" and ") + ".";
  };


  Menu.prototype.toString = function() {
    var i, platesArr;
    platesArr = [];
    i = 0;
    while (i < this.plates.length) {
      platesArr.push(this.plates[i].name);
      i++;
    }
    return "This menu contains " + this.plates.length + " plates: " + platesArr.join(" and ") + ".";
  };



}).call(this);
